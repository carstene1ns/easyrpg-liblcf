# generated by CMake for liblcf

@PACKAGE_INIT@

# dependencies
include(CMakeFindDependencyMacro)
if(@LCF_SUPPORT_ICU@)
	find_dependency(ICU COMPONENTS i18n uc data REQUIRED)
endif()
if(@LCF_SUPPORT_XML@)
	find_dependency(expat CONFIG)
	if(NOT expat_FOUND)
		# older version
		find_dependency(EXPAT REQUIRED)
		add_library(expat::expat ALIAS EXPAT::EXPAT)
	endif()
endif()

# auto-generated
include("${CMAKE_CURRENT_LIST_DIR}/liblcfTargets.cmake")

# paths and stuff for old inclusion (i.e. no import, deprecated!)
include(SelectLibraryConfigurations)
include(FindPackageHandleStandardArgs)
get_target_property(LIBLCF_INCLUDE_DIR liblcf::liblcf INTERFACE_INCLUDE_DIRECTORIES)
get_target_property(LIBLCF_LIBRARY_RELEASE liblcf::liblcf IMPORTED_LOCATION_RELEASE)
get_target_property(LIBLCF_LIBRARY_DEBUG liblcf::liblcf IMPORTED_LOCATION_DEBUG)
get_target_property(LIBLCF_LIBRARY_NOCONFIG liblcf::liblcf IMPORTED_LOCATION_NOCONFIG)
select_library_configurations(LIBLCF)
set(LIBLCF_VERSION_STRING @PACKAGE_VERSION@)
set(LIBLCF_INCLUDE_DIRS ${LIBLCF_INCLUDE_DIR})
if(NOT LIBLCF_LIBRARY AND LIBLCF_LIBRARY_NOCONFIG)
	set(LIBLCF_LIBRARY ${LIBLCF_LIBRARY_NOCONFIG})
	set(LIBLCF_LIBRARIES ${LIBLCF_LIBRARY})
endif()
find_package_handle_standard_args(liblcf
	REQUIRED_VARS LIBLCF_LIBRARY LIBLCF_INCLUDE_DIR
	VERSION_VAR LIBLCF_VERSION_STRING)
# end of deprecated inclusion logic

check_required_components("@PROJECT_NAME@")
